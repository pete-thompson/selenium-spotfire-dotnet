image: petethompson1968/selenium-spotfire-dotnet:2.1

stages:
  - build
  - test
  - publish

build:
  stage: build
  script:
    - dotnet build --configuration Release
  artifacts:
    paths: 
    - ./**/Selenium.Spotfire*.nupkg

test:
  stage: test
  allow_failure: true
  script:
    - |
      echo '$kerberosPassword' | kinit $KerberosUsername
      export DISPLAY=:20
      Xvfb :20 -screen 0 1920x1080x16 &
      dotnet test "--settings:$runSettings" --results-directory ./test-results
  artifacts:
    when: always
    paths: 
    - test-results

# Publish stage has to run on our specific runner because
# - nuget signing isn't supported on Linux (so we can't use Docker)
# - We're storing the signing certificate on the server itself for security purposes
publish:
  stage: publish
  when: manual
  tags: 
    - spotfire-server
  dependencies:
    - build
  script:
    - |
      gci -recurse -include "Selenium.Spotfire*.nupkg" | % {
        write-host "Signing $_"
        d:\nuget\nuget sign $_ -certificatePath d:\nuget\SpotfireCodeSigning.pfx -certificatePassword $certificatePassword -timestamper http://timestamp.digicert.com
      }
      dotnet nuget push **/Selenium.Spotfire*.nupkg --api-key $NuGetAPIKey --source https://api.nuget.org/v3/index.json